apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: production-demo-app
  namespace: argocd
  labels:
    environment: production
    service: demo-app
spec:
  project: default
  source:
    repoURL: https://github.com/nicholasadamou/argocd-selective-sync-demo.git
    targetRevision: HEAD
    path: environments/production
  destination:
    server: https://kubernetes.default.svc
    namespace: demo-app-prod
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      selfHeal: true
      prune: true
  # Enhanced post-sync hook for production environment
  operation:
    sync:
      hooks:
      - name: production-post-sync-validation
        argocd.argoproj.io/hook: PostSync
        argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
        manifest: |
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: production-post-sync-validation
            namespace: demo-app-prod
          spec:
            template:
              spec:
                containers:
                - name: validation
                  image: curlimages/curl:latest
                  command:
                  - /bin/sh
                  - -c
                  - |
                    echo "üè≠ Running PRODUCTION post-sync validation..."
                    echo "Environment: PRODUCTION"
                    echo "Timestamp: $(date)"
                    echo "Starting comprehensive health checks..."

                    # Extended wait for production readiness
                    echo "‚è∞ Waiting for production service to be fully ready..."
                    sleep 20

                    # Multiple validation checks for production
                    RETRIES=3
                    SUCCESS=0

                    for i in $(seq 1 $RETRIES); do
                      echo "üîç Health check attempt $i/$RETRIES"

                      if curl -f --connect-timeout 10 --max-time 15 http://demo-app-service/; then
                        echo "‚úÖ Production service check $i passed"
                        SUCCESS=$((SUCCESS + 1))
                      else
                        echo "‚ùå Production service check $i failed"
                      fi

                      # Wait between retries
                      if [ $i -lt $RETRIES ]; then
                        sleep 5
                      fi
                    done

                    # Production requires stricter validation
                    if [ $SUCCESS -gt 1 ]; then
                      echo "üéâ PRODUCTION validation PASSED ($SUCCESS/$RETRIES checks successful)"
                      echo "‚úÖ Production deployment validated and ready!"
                    else
                      echo "‚ö†Ô∏è  PRODUCTION validation completed with limited success ($SUCCESS/$RETRIES)"
                      echo "üìù This is expected in demo environment"
                    fi

                    echo "üèÅ Production post-sync validation complete!"
                restartPolicy: Never
            backoffLimit: 3
