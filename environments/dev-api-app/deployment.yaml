apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app-dev
  labels:
    app: api-app-dev
    environment: dev
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-app-dev
  template:
    metadata:
      labels:
        app: api-app-dev
        environment: dev
        component: backend
    spec:
      containers:
      - name: api-app
        image: node:18-alpine
        ports:
        - containerPort: 3000
        command:
        - /bin/sh
        - -c
        - |
          cat > server.js << 'EOF'
          const http = require('http');
          const server = http.createServer((req, res) => {
            const response = {
              message: 'Hello from Development API!',
              environment: 'development',
              version: 'v1.0.0',
              timestamp: new Date().toISOString(),
              endpoint: req.url
            };
            res.writeHead(200, { 'Content-Type': 'application/json' });
            res.end(JSON.stringify(response, null, 2));
          });
          server.listen(3000, () => {
            console.log('Dev API Server running on port 3000');
          });
          EOF
          node server.js
        env:
        - name: NODE_ENV
          value: "development"
        - name: API_VERSION
          value: "v1.0.0"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
